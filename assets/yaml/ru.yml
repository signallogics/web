main: главная
teams: команды
index_title: CTFight
request_title: Участвовать в CTFight
teams_title: CTFight | Команды
remind_me: Напомнить
remind_about_start: Напомнить о начале турнира
service_example: пример сервиса
write_up_example: пример видео-разбора
rulers: регламент
take_part: принять участие
participate: участвовать
team_name: Название команды
logo_link_or_file: Логотип (ссылка или файл)
info: Город и университет
service_link_or_file: Сервис (ссылка или файл)
video_write_up_link_or_file: Видео-разбор (ссылка или файл)
author_or_authors: Автор или авторы сервиса
necessary: Обязательно
choose: выбрать
logo: Логотип
service: Сервис
email: E-mail
contacts: Контакты
contact_details: Контактная информация
contact_email: Контактный e-mail
video_write_up: Видео-разбор сервиса
tip_team_name: Вы сможете изменить название позже
tip_email: Мы будет присылать вам много спама
tip_contacts: Укажите телефоны капитана и автора сервиса
tip_logo: Вставьте ссылку или выберите файл с компьютера. Размер файла должен быть не менее 100x100 и не более 1000x1000.
tip_info: Укажите город или университет
tip_service: Вставьте ссылку или выберите файл. Сервис должен содержать не менее двух уязвимостей. Не забудьте добавить deb-package или инструкцию по установке. Железо для запуска сервиса предоставляет команда keva. <br><a class="link link--white" href="https://github.com/">Пример</a>
tip_video_write_up: Разбор уязвимостей. <br><a class="link link--white" href="https://youtube.com/">Пример</a>
tip_author_or_authors: Добавьте автора, авторов и/или команду, разработавшую сервис. По умолчанию это ваша команда.
first_tour: Первый тур
second_tour: Второй тур
third_tour: Третий тур
send_request: отправить заявку
what_is_ctfight: <p><strong>CTFight</strong> - это турнир по CTF.</p><p>CTF - это соревнования по информационной безопастности (или легальные хакерские игры). Турнир необходим как подготовка к большим играм.</p>
small_rulers: В турнире участвуют 8 команд. Будет сыграно 7 небольших игр. Игра длится 2 часа В каждой игре будут участвовать только две команды и будет использован только один сервис. В финальной игре будет использовано два оставшихся сервиса. Любая команда принимается в участие только при наличии сервиса и видео к нему. После каждой игры будет объявлен победитель и выложено видео от автора по разбору сервиса.
defense: 'Защита'
offense: 'Атака'
summary: 'Итог'

register_is_open: Зарегистрированно %s из 8.
register_is_in_next_time: На ближайший тур зарегистрированно 8 из 8 команд. На следующий %s из 8.
register_is_inaccessible: Регистрация на ближайшие игры закончилась.

we_notify_you_about_start: Мы напомним вам о начале соревнований.
registration_success: Команда успешно зарегистрирована.
to_index: на главную

error_LIMIT_FILE_SIZE: Слишком большой файл
error_UNKNOWN: Неизвестная ошибка
error_NOT_IMAGE: Файл должен быть изображенем
error_FILE_LARGE: Слишком большой файл

concept_checker: >
  Чекер должен представлять из себя скрипт написанный на bash или python (или с использованием любого интерпретатора который есть по умолчанию в debian jessie).<br/>
  Чекер не должен быть доступен другим командам (организаторы сами его опубликуют)<br/>
  Пример вызова для того что бы положить флаг: ./checker put 172.17.0.65 someid3 4FE93926-55E6-47E7-9089-9BDED570B631<br/>
  Пример вызова для того что бы проверить флаг: ./checker get 172.17.0.65 someid3 4FE93926-55E6-47E7-9089-9BDED570B631<br/>
  Код 200 говорит о том что все хорошо (флаг положен/ флаг найден/ сервис проверен)<br/>
  Код 404 говорит о том что сервис плох и потерян.<br/>
  Код 423 говорит о том что сервис сломан или что флаг не найден.<br/>
  Остальные коды считаются не верными и чекер признается некорректным.<br>
  Файл чекера должен называться checker, быть исполняемым (chmod +x checker) и лежать в директории с отправляемым сервисом.<br>

concept_service: >
  Сервис лучше всего обернуть в докер-контейнер (Dockerfile).<br/>
  Сервис не должен быть доступен другим командам (организаторы сами его опубликуют)<br/>
  Должно быть минимум 2 уязвимости.<br/>
  Обязательно должен быть установлен ssh сервер.<br/>
  Должен быть скрипт: rebuild.sh который будет удалять старые контейнеры сервиса и создавать новые.<br/>
  Обязательно должен быть установлен README.md в котором записываете дату, время, автора сервиса и его контакты а также дополнительную информацию.<br/>
  Также обязательно присутсвие презентации с описанием уязвимостей и как их закрывать - все остальное по желанию.<br/>

concept_video: >
  Видео не должно быть опубликовано (организаторы сами опубликуют его).<br/>
  Видео должно содержать дружелюбное приветсвие.<br/>
  Демонстрацию эксплуатации уязвимости и ее ликвидацию.<br/>
  Быть нормального качества.<br/>
